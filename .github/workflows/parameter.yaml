name: Full Workflow with PR and Notifications
on:
  push:
    branches:
      - master  # Trigger this workflow when pushing to the master branch

jobs:
  full-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to latest version
        with:
          fetch-depth: 0  # Fetch full history for proper branching
        
      - name: Generate dynamic intermediate branch name
        id: generate_branch
        run: |
          # Create a dynamic branch name based on the current date and time
          BRANCH_NAME="intermediate-branch-$(date +'%Y%m%d%H%M%S')"
          echo "Generated branch name: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Set Git user identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
      - name: Create intermediate branch from master
        run: |
          git fetch origin develop
          git checkout master
          git pull origin master
          git checkout -b ${{ env.BRANCH_NAME }}
          git push origin ${{ env.BRANCH_NAME }}
          
      - name: Create Pull Request from intermediate to develop
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          branch: ${{ env.BRANCH_NAME }}
          title: "Automated PR: Sync master to develop via ${{ env.BRANCH_NAME }}"
          body: |
            This is an automated pull request to sync changes from master to develop.
            
            Source branch: ${{ env.BRANCH_NAME }} (based on master)
            Target branch: develop
            
            This PR contains the latest changes from master that need to be merged into develop.
          draft: false
          
      - name: Get PR number
        id: get_pr_number
        run: |
          # Wait for PR to be created
          sleep 5
          
          # Get PR number for intermediate branch -> develop
          pr_number=$(gh pr list --head ${{ env.BRANCH_NAME }} --base develop --json number --jq '.[0].number')
          
          if [ "$pr_number" = "null" ] || [ -z "$pr_number" ]; then
            echo "No PR found, checking again..."
            sleep 5
            pr_number=$(gh pr list --head ${{ env.BRANCH_NAME }} --base develop --json number --jq '.[0].number')
          fi
          
          echo "Found PR number: $pr_number"
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check if PR has conflicts
        id: check_pr_conflicts
        run: |
          # Wait a moment for GitHub to process the PR
          sleep 5
          
          pr_url="https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}"
          pr_data=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $pr_url)
          pr_status=$(echo "$pr_data" | jq -r '.mergeable')
          
          echo "PR mergeable status: $pr_status"
          echo "mergeable=$pr_status" >> $GITHUB_ENV
          echo "mergeable=$pr_status" >> $GITHUB_OUTPUT
          
      - name: Slack Notification if PR has conflicts
        if: env.mergeable == 'false' && env.PR_NUMBER != '' && env.PR_NUMBER != 'null'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"⚠️ The pull request to sync master->develop has conflicts. PR #${{ env.PR_NUMBER }}\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Merge PR if no conflicts
        if: env.mergeable == 'true' && env.PR_NUMBER != '' && env.PR_NUMBER != 'null'
        run: |
          curl -X PUT \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"commit_title": "Merge ${{ env.BRANCH_NAME }} to develop", "merge_method": "merge"}' \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}/merge"
          
      - name: Slack Notification of successful merge
        if: env.mergeable == 'true' && env.PR_NUMBER != '' && env.PR_NUMBER != 'null'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"✅ The pull request to sync master->develop was successfully merged. PR #${{ env.PR_NUMBER }}\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Cleanup intermediate branch
        if: env.mergeable == 'true' && env.PR_NUMBER != '' && env.PR_NUMBER != 'null'
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }}
          
      - name: Slack Notification if PR creation failed
        if: env.PR_NUMBER == '' || env.PR_NUMBER == 'null'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"❌ Failed to create PR from ${{ env.BRANCH_NAME }} to develop. Check workflow logs.\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
