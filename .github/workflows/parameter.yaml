name: Deploy and Sync

on:
  pull_request:
    branches:
      - master
      - develop
    types:
      - closed
  # Trigger manually
  workflow_dispatch:
    inputs:
      version:
        description: 'Type any version'
        required: true
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'develop'
        type: choice
        options:
          - develop
          - master

jobs:
  get_deployment_details:
    runs-on: ubuntu-latest
    # Only run if PR was merged or if manually triggered
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    defaults:
      run:
        working-directory: ./postgress
    steps:
      # Step 1: Checkout the repository metadata
      - name: Checkout Repository Metadata
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.ref }}
      
      - name: Validate workflow_dispatch branch
        if: github.event_name == 'workflow_dispatch'
        id: check_workflow_dispatch
        run: |
          ALLOWED_BRANCHES=("develop" "master")
          INPUT_BRANCH="${{ github.event.inputs.branch }}"
          
          if [[ -z "$INPUT_BRANCH" ]]; then
            echo "::error::Branch input is required for workflow_dispatch"
            exit 1
          fi
          
          # Check if branch is in allowed list
          if [[ ! " ${ALLOWED_BRANCHES[@]} " =~ " ${INPUT_BRANCH} " ]]; then
            echo "::error::Branch '$INPUT_BRANCH' is not allowed. Must be one of: ${ALLOWED_BRANCHES[*]}"
            exit 1
          fi
          
          echo "âœ… Branch validation passed: $INPUT_BRANCH"
          echo "validated-branch=$INPUT_BRANCH" >> $GITHUB_OUTPUT
      
      - name: Show deployment info
        run: |
          echo "=== Deployment Details ==="
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.branch || github.head_ref || github.ref_name }}"
          echo "Version: ${{ github.event.inputs.version || 'auto' }}"
          echo "SHA: ${{ github.sha }}"
      
      - name: Show actors
        env: 
          ORIGINAL_ACTOR: ${{ github.actor }}
          TRIGGER_ACTOR: ${{ github.triggering_actor }}
        run: |
          echo "Original actor: $ORIGINAL_ACTOR"
          echo "Triggering actor: $TRIGGER_ACTOR"
      
      # Add your deployment steps here
      - name: Deploy application
        run: |
          echo "ðŸš€ Deploying application..."
          echo "Version: ${{ github.event.inputs.version || 'latest' }}"
          # Add your actual deployment commands here
      
      - name: Trigger sync workflow
        # Only trigger sync if deploying from master
        if: (github.event_name == 'workflow_dispatch' && github.event.inputs.branch == 'master') || (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master')
        uses: actions/github-script@v6
        with:
          script: |
            console.log('ðŸ”„ Triggering sync workflow after master deployment');
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'deployment-complete',
              client_payload: {
                ref: context.ref,
                sha: context.sha,
                deployed_from: '${{ github.event_name == "workflow_dispatch" && github.event.inputs.branch || github.head_ref || github.ref_name }}',
                version: '${{ github.event.inputs.version || "auto" }}'
              }
            });
            console.log('âœ… Sync workflow triggered successfully');
